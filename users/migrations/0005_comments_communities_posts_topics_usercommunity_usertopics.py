# Generated by Django 3.2.8 on 2022-10-22 08:51

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('users', '0004_rename_user_id_userfollowers_user'),
    ]

    operations = [
        migrations.CreateModel(
            name='Communities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=5000)),
                ('topics', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=2000), size=None)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
            options={
                'db_table': 'Communities',
            },
        ),
        migrations.CreateModel(
            name='Topics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.CharField(max_length=5000)),
            ],
            options={
                'db_table': 'Topics',
            },
        ),
        migrations.CreateModel(
            name='UserTopics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('topic', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.topics')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
            options={
                'db_table': 'UserTopics',
            },
        ),
        migrations.CreateModel(
            name='UserCommunity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('community', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.communities')),
                ('user', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
            options={
                'db_table': 'UserCommunity',
            },
        ),
        migrations.CreateModel(
            name='Posts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=500, null=True)),
                ('description', models.CharField(max_length=200000)),
                ('topic_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=[], null=True, size=None)),
                ('community_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=[], null=True, size=None)),
                ('appreciator_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=[], null=True, size=None)),
                ('comment_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=[], null=True, size=None)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
            options={
                'db_table': 'Posts',
            },
        ),
        migrations.CreateModel(
            name='Comments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200000)),
                ('appreciator_ids', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(), default=[], null=True, size=None)),
                ('thread_id', models.UUIDField(default=uuid.uuid4)),
                ('creator', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to='users.users')),
            ],
            options={
                'db_table': 'Comments',
            },
        ),
    ]
